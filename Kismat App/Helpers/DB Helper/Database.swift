//
//  Database.swift
//  Von Rides
//
//  Created by Ahsan Iqbal on Saturday05/06/2021.
//


import Foundation
import RealmSwift
import RxSwift
import SwiftDate

class Database {
    
    static let singleton = Database()
    
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    
    
    //MARK: create
    
   
    
    
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    
    
    // MARK: Fetch Records
    
    
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    
    
    //MARK: update records
    
    
    
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    
    
    //MARK: delete records
    
    func removeCompletedDB() {
        let realm = try! Realm()
        try! realm.write {
            realm.deleteAll()
        }
    }

    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    ///////////////////*********************////////////////////////********************////////////////////////*********************///////////////////////
    
    
    func getImageData(imgStr: String) -> Data {
        var imgData = Data()
        APIService
            .singelton
            .getImageData(imgStr: imgStr)
            .subscribe({ model in
                switch model {
                    case .next(let val):
                        if !val.isEmpty {
                            Logs.show(message: "\(val)")
                            imgData = val
                        } else {
                            
                        }
                    case .error(let error):
                        print(error)
                    case .completed:
                        print("completed")
                }
            })
            .disposed(by: dispose_Bag)
        return imgData
    }
    
}

